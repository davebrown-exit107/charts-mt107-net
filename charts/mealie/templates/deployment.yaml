apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mealie.fullname" . }}
  labels:
    {{- include "mealie.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mealie.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mealie.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mealie.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.env -}}
            {{- $result := list -}}
            {{- range $k, $v := . -}}
              {{- $name := $k -}}
              {{- $value := $v -}}
              {{- if kindIs "int" $name -}}
                {{- $name = required "environment variables as a list of maps require a name field" $value.name -}}
              {{- end -}}

              {{- if kindIs "map" $value -}}
                {{- if hasKey $value "value" -}}
                  {{- $envValue := $value.value | toString -}}
                  {{- $result = append $result (dict "name" $name "value" (tpl $envValue $)) -}}
                {{- else if hasKey $value "valueFrom" -}}
                  {{- $result = append $result (dict "name" $name "valueFrom" $value.valueFrom) -}}
                {{- else -}}
                  {{- $result = append $result (dict "name" $name "valueFrom" $value) -}}
                {{- end -}}
              {{- end -}}
              {{- if not (kindIs "map" $value) -}}
                {{- if kindIs "string" $value -}}
                  {{- $result = append $result (dict "name" $name "value" (tpl $value $)) -}}
                {{- else if or (kindIs "float64" $value) (kindIs "bool" $value) -}}
                  {{- $result = append $result (dict "name" $name "value" ($value | toString)) -}}
                {{- else -}}
                  {{- $result = append $result (dict "name" $name "value" $value) -}}
                {{- end -}}
              {{- end -}}
            {{- end -}}
            {{- toYaml (dict "env" $result) | nindent 10 -}}
          {{- end -}}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
           - mountPath: /app/nltk_data
             name: nltk-data
           - mountPath: /app/data
             name: api-data
           {{- if .Values.persistence.additionalMounts }}
             {{- .Values.persistence.additionalMounts | toYaml | nindent 12 }}
           {{- end }}
      volumes:
        - name: api-data
          {{- if .Values.persistence.api_data.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.api_data.existingClaim | default (printf "%s-api-data" (include "mealie.fullname" .)) }}
          {{- else }}
          emptyDir: { }
          {{- end }}
        - name: nltk-data
          {{- if .Values.persistence.nltk_data.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.nltk_data.existingClaim | default (printf "%s-nltk-data" (include "mealie.fullname" .)) }}
          {{- else }}
          emptyDir: { }
          {{- end }}
          {{- if .Values.persistence.additionalVolumes }}
            {{- .Values.persistence.additionalVolumes | toYaml | nindent 8}}
          {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
